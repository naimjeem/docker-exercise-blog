name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  BACKEND_IMAGE: ${{ secrets.DOCKER_USERNAME }}/todo-backend
  FRONTEND_IMAGE: ${{ secrets.DOCKER_USERNAME }}/todo-frontend

jobs:
  docker-build-push:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Extract Release Version
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Build & Push Backend
        run: |
          docker build -t $BACKEND_IMAGE:${{ env.RELEASE_VERSION }} ./backend
          docker push $BACKEND_IMAGE:${{ env.RELEASE_VERSION }}

      - name: Build & Push Frontend
        run: |
          docker build -t $FRONTEND_IMAGE:${{ env.RELEASE_VERSION }} ./frontend
          docker push $FRONTEND_IMAGE:${{ env.RELEASE_VERSION }}

      - name: Update .env with new RELEASE_VERSION
        run: |
          echo "Setting RELEASE_VERSION=${{ env.RELEASE_VERSION }} in .env"

          # Ensure .env exists
          touch .env

          # Remove any existing RELEASE_VERSION line
          grep -v '^RELEASE_VERSION=' .env > .env.tmp || true

          # Add the new RELEASE_VERSION at the end
          echo "RELEASE_VERSION=${{ env.RELEASE_VERSION }}" >> .env.tmp

          # Replace old .env with new one
          mv .env.tmp .env

          echo "Final .env:"
          cat .env

      - name: Deploy locally with Docker Compose
        run: |
          docker compose pull
          docker compose up -d